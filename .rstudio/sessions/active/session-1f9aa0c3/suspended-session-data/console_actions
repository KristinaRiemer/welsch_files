{
    "data" : [
        "+ ",
        "  PEcAn.utils::status.start(\"ADVANCED\")",
        "+ ",
        "  q();",
        "+ ",
        "}",
        "> ",
        "# Start ecosystem model runs",
        "> ",
        "if (PEcAn.utils::status.check(\"MODEL\") == 0) {",
        "+ ",
        "  PEcAn.utils::status.start(\"MODEL\")",
        "+ ",
        "  PEcAn.remote::runModule.start.model.runs(settings, stop.on.error = FALSE)",
        "+ ",
        "  PEcAn.utils::status.end()",
        "+ ",
        "}",
        "debugging in: PEcAn.remote::runModule.start.model.runs(settings, stop.on.error = FALSE)\ndebug: {\n    if (is.MultiSettings(settings) || is.Settings(settings)) {\n        write <- settings$database$bety$write\n        return(start.model.runs(settings, write, stop.on.error))\n    }\n    else {\n        PEcAn.logger::logger.severe(\"runModule.start.model.runs only works with Settings or MultiSettings\")\n    }\n}\n",
        "Browse[2]> ",
        "",
        "debug: if (is.MultiSettings(settings) || is.Settings(settings)) {\n    write <- settings$database$bety$write\n    return(start.model.runs(settings, write, stop.on.error))\n} else {\n    PEcAn.logger::logger.severe(\"runModule.start.model.runs only works with Settings or MultiSettings\")\n}\n",
        "Browse[2]> ",
        "",
        "Error in is.MultiSettings(settings) : \n  could not find function \"is.MultiSettings\"\n",
        "\nRestarting R session...\n\n",
        "> ",
        "#!/usr/bin/env Rscript",
        "> ",
        "#-------------------------------------------------------------------------------",
        "> ",
        "# Copyright (c) 2012 University of Illinois, NCSA.",
        "> ",
        "# All rights reserved. This program and the accompanying materials",
        "> ",
        "# are made available under the terms of the ",
        "> ",
        "# University of Illinois/NCSA Open Source License",
        "> ",
        "# which accompanies this distribution, and is available at",
        "> ",
        "# http://opensource.ncsa.illinois.edu/license.html",
        "> ",
        "#-------------------------------------------------------------------------------",
        "> ",
        "",
        "> ",
        "# ----------------------------------------------------------------------",
        "> ",
        "# Load required libraries",
        "> ",
        "# ----------------------------------------------------------------------",
        "> ",
        "#.libPaths()",
        "> ",
        "devtools::load_all(\"pecan/base/db/\")",
        "Loading PEcAn.DB\n",
        "> ",
        "devtools::load_all(\"pecan/base/all/\")",
        "Loading PEcAn.all\n",
        "Loading required package: PEcAn.settings\n",
        "Failed with error:  ",
        "",
        "‘package ‘PEcAn.DB’ required by ‘PEcAn.settings’ could not be found’",
        "",
        "\n",
        "Loading required package: PEcAn.MA\n",
        "Loading required package: XML\n",
        "Loading required package: lattice\n",
        "Loading required package: MASS\n",
        "Loading required package: PEcAn.utils\n",
        "\nAttaching package: ‘PEcAn.utils’\n\n",
        "The following object is masked from ‘package:utils’:\n\n    download.file\n\n",
        "Failed with error:  ",
        "",
        "‘package ‘PEcAn.DB’ required by ‘PEcAn.MA’ could not be found’",
        "",
        "\n",
        "Loading required package: PEcAn.logger\n",
        "\nAttaching package: ‘PEcAn.logger’\n\n",
        "The following objects are masked from ‘package:PEcAn.utils’:\n\n    logger.debug, logger.error, logger.getLevel, logger.info, logger.setLevel,\n    logger.setOutputFile, logger.setQuitOnSevere, logger.setWidth, logger.severe,\n    logger.warn\n\n",
        "Loading required package: PEcAn.uncertainty\n",
        "Loading required package: PEcAn.priors\n",
        "Loading required package: ggplot2\n",
        "Loading required package: ggmap\n",
        "Google Maps API Terms of Service: http://developers.google.com/maps/terms.\n",
        "Please cite ggmap if you use it: see citation('ggmap') for details.\n",
        "Loading required package: gridExtra\n",
        "\nAttaching package: ‘PEcAn.uncertainty’\n\n",
        "The following objects are masked from ‘package:PEcAn.utils’:\n\n    get.ensemble.samples, read.ensemble.output, write.ensemble.configs\n\n",
        "Loading required package: PEcAn.data.atmosphere\n",
        "Loading required package: PEcAn.data.land\n",
        "Loading required package: datapack\n",
        "Loading required package: dataone\n",
        "Failed with error:  ",
        "",
        "‘package ‘PEcAn.DB’ required by ‘PEcAn.data.land’ could not be found’",
        "",
        "\n",
        "Loading required package: PEcAn.data.remote\n",
        "Loading required package: PEcAn.assim.batch\n",
        "Loading required package: PEcAn.emulator\n",
        "Loading required package: mvtnorm\n",
        "Loading required package: mlegp\n",
        "Loading required package: MCMCpack\n",
        "Loading required package: coda\n",
        "##\n## Markov Chain Monte Carlo Package (MCMCpack)\n",
        "## Copyright (C) 2003-2019 Andrew D. Martin, Kevin M. Quinn, and Jong Hee Park\n",
        "##\n## Support provided by the U.S. National Science Foundation\n",
        "## (Grants SES-0350646 and SES-0350613)\n##\n",
        "Loading required package: PEcAn.benchmark\n",
        "Loading required package: PEcAn.remote\n",
        "Loading required package: PEcAn.workflow\n",
        "\nAttaching package: ‘PEcAn.workflow’\n\n",
        "The following objects are masked from ‘package:PEcAn.utils’:\n\n    do_conversions, run.write.configs, runModule.run.write.configs\n\n",
        "> ",
        "#library(PEcAn.all)",
        "> ",
        "#debugonce(PEcAn.DB::get.trait.data.pft)",
        "> ",
        "debugonce(PEcAn.remote::runModule.start.model.runs)",
        "> ",
        "library(PEcAn.utils)",
        "> ",
        "library(RCurl)",
        "Loading required package: bitops\n",
        "> ",
        "",
        "> ",
        "# make sure always to call status.end",
        "> ",
        "options(warn=1)",
        "> ",
        "options(error=quote({",
        "+ ",
        "  PEcAn.utils::status.end(\"ERROR\")",
        "+ ",
        "  PEcAn.remote::kill.tunnel(settings)",
        "+ ",
        "  if (!interactive()) {",
        "+ ",
        "    q(status = 1)",
        "+ ",
        "  }",
        "+ ",
        "}))",
        "> ",
        "",
        "> ",
        "#options(warning.expression=status.end(\"ERROR\"))",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "# ----------------------------------------------------------------------",
        "> ",
        "# PEcAn Workflow",
        "> ",
        "# ----------------------------------------------------------------------",
        "> ",
        "# Open and read in settings file for PEcAn run.",
        "> ",
        "args <- commandArgs(trailingOnly = TRUE)",
        "> ",
        "if (is.na(args[1])){",
        "+ ",
        "  settings <- PEcAn.settings::read.settings(\"biocro_darpa_files/pecan.biocro.darpa.xml\") ",
        "+ ",
        "} else {",
        "+ ",
        "  settings.file <- args[1]",
        "+ ",
        "  settings <- PEcAn.settings::read.settings(settings.file)",
        "+ ",
        "}",
        "2019-09-03 19:16:45 INFO   [#2: PEcAn.settings::read.settings] : \n   Loading inpufile= biocro_darpa_files/pecan.biocro.darpa.xml \n",
        "> ",
        "",
        "> ",
        "# Check for additional modules that will require adding settings",
        "> ",
        "if(\"benchmarking\" %in% names(settings)){",
        "+ ",
        "  library(PEcAn.benchmark)",
        "+ ",
        "  settings <- papply(settings, read_settings_BRR)",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "if(\"sitegroup\" %in% names(settings)){",
        "+ ",
        "  if(is.null(settings$sitegroup$nSite)){",
        "+ ",
        "    settings <- PEcAn.settings::createSitegroupMultiSettings(settings, ",
        "+ ",
        "                                                             sitegroupId = settings$sitegroup$id)",
        "+ ",
        "  } else {",
        "+ ",
        "    settings <- PEcAn.settings::createSitegroupMultiSettings(settings, ",
        "+ ",
        "                                                             sitegroupId = settings$sitegroup$id,",
        "+ ",
        "                                                             nSite = settings$sitegroup$nSite)",
        "+ ",
        "  }",
        "+ ",
        "  settings$sitegroup <- NULL ## zero out so don't expand a second time if re-reading",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "# Update/fix/check settings. Will only run the first time it's called, unless force=TRUE",
        "> ",
        "settings <- PEcAn.settings::prepare.settings(settings, force = FALSE)",
        "2019-09-03 19:16:45 INFO   [fix.deprecated.settings] : \n   Fixing deprecated settings... \n",
        "2019-09-03 19:16:45 INFO   [fix.deprecated.settings] : \n   settings$run$host is deprecated. uwe settings$host instead \n",
        "2019-09-03 19:16:45 INFO   [update.settings] : \n   Fixing deprecated settings... \n",
        "2019-09-03 19:16:45 INFO   [check.settings] : Checking settings... \n",
        "2019-09-03 19:16:45 INFO   [check.database] : \n   Successfully connected to database : PostgreSQL bety bety postgres bety \n   FALSE \n",
        "2019-09-03 19:16:45 WARN   [check.database.settings] : \n   Will not write runs/configurations to database. \n",
        "2019-09-03 19:16:45 WARN   [check.bety.version] : \n   Last migration 20181129000515 is more recent than expected \n   20141009160121. This could result in PEcAn not working as expected. \n",
        "2019-09-03 19:16:45 INFO   [check.ensemble.settings] : \n   Setting ensemble size to 1. \n",
        "2019-09-03 19:16:45 INFO   [check.ensemble.settings] : \n   No start date passed to ensemble - using the run date ( 2004 ). \n",
        "2019-09-03 19:16:45 INFO   [check.ensemble.settings] : \n   No end date passed to ensemble - using the run date ( 2004 ). \n",
        "2019-09-03 19:16:45 INFO   [check.ensemble.settings] : \n   We are updating the ensemble tag inside the xml file. \n",
        "2019-09-03 19:16:45 INFO   [fn] : \n   No start date passed to sensitivity.analysis - using the run date ( 2004 \n   ). \n",
        "2019-09-03 19:16:45 INFO   [fn] : \n   No end date passed to sensitivity.analysis - using the run date ( 2004 \n   ). \n",
        "2019-09-03 19:16:45 INFO   [fn] : \n   Setting site name to Donald Danforth Plant Science Center Growth Chamber \n   157 \n",
        "2019-09-03 19:16:45 INFO   [fn] : \n   Setting site lat to 38.674593 \n",
        "2019-09-03 19:16:45 INFO   [fn] : \n   Setting site lon to -90.397189 \n",
        "2019-09-03 19:16:45 WARN   [check.model.settings] : \n   Model type BIOCRO not in database \n",
        "2019-09-03 19:16:45 INFO   [check.model.settings] : \n   Setting model id to -1 \n",
        "2019-09-03 19:16:45 INFO   [check.model.settings] : \n   Option to delete raw model output not set or not logical. Will keep all \n   model output. \n",
        "2019-09-03 19:16:45 WARN   [check.model.settings] : \n   No model binary sepcified in database for model BIOCRO \n",
        "2019-09-03 19:16:45 WARN   [check.settings] : \n   settings$database$dbfiles pathname biocro_darpa_results/dbfiles is \n   invalid \n  \n   placing it in the home directory /home/kristinariemer \n",
        "2019-09-03 19:16:46 INFO   [fn] : \n   Missing optional input : soil \n",
        "2019-09-03 19:16:46 WARN   [dbfiles.R#642: PEcAn.logger::logger.warn] : \n   no id found for \n   /home/kristinariemer/pecan/models/biocro/tests/testthat/data/US-Bo1 in \n   database \n",
        "2019-09-03 19:16:46 INFO   [fn] : \n   path /home/kristinariemer/pecan/models/biocro/tests/testthat/data/US-Bo1 \n",
        "2019-09-03 19:16:46 INFO   [fn] : \n   path /home/kristinariemer/pecan/models/biocro/tests/testthat/data/US-Bo1 \n",
        "2019-09-03 19:16:46 INFO   [check.workflow.settings] : \n   output folder = /home/kristinariemer/biocro_darpa_results \n",
        "2019-09-03 19:16:46 INFO   [check.settings] : \n   Storing pft Setaria WT in \n   /home/kristinariemer/biocro_darpa_results/pft/Setaria WT \n",
        "> ",
        "",
        "> ",
        "# Write pecan.CHECKED.xml",
        "> ",
        "PEcAn.settings::write.settings(settings, outputfile = \"pecan.CHECKED.xml\")",
        "[1] \"/home/kristinariemer/biocro_darpa_results/pecan.CHECKED.xml\"\n",
        "> ",
        "",
        "> ",
        "# start from scratch if no continue is passed in",
        "> ",
        "statusFile <- file.path(settings$outdir, \"STATUS\")",
        "> ",
        "if (length(which(commandArgs() == \"--continue\")) == 0 && file.exists(statusFile)) {",
        "+ ",
        "  file.remove(statusFile)",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "# Do conversions",
        "> ",
        "settings <- PEcAn.workflow::do_conversions(settings)",
        "2019-09-03 19:16:46 DEBUG  [PEcAn.workflow::do_conversions] : \n   do.conversion outdir /home/kristinariemer/biocro_darpa_results/dbfiles \n",
        "2019-09-03 19:16:46 INFO   [PEcAn.workflow::do_conversions] : PROCESSING:  met \n",
        "2019-09-03 19:16:46 INFO   [PEcAn.workflow::do_conversions] : \n   calling met.process: \n   /home/kristinariemer/pecan/models/biocro/tests/testthat/data/US-Bo1 \n",
        "2019-09-03 19:16:46 WARN   [PEcAn.data.atmosphere::met.process] : \n   met.process only has a path provided, assuming path is model driver and \n   skipping processing \n",
        "2019-09-03 19:16:46 DEBUG  [PEcAn.workflow::do_conversions] : \n   updated met path: \n   /home/kristinariemer/pecan/models/biocro/tests/testthat/data/US-Bo1 \n",
        "> ",
        "",
        "> ",
        "# Query the trait database for data and priors",
        "> ",
        "if (PEcAn.utils::status.check(\"TRAIT\") == 0){",
        "+ ",
        "  PEcAn.utils::status.start(\"TRAIT\")",
        "+ ",
        "  settings <- PEcAn.workflow::runModule.get.trait.data(settings)",
        "+ ",
        "  PEcAn.settings::write.settings(settings, outputfile='pecan.TRAIT.xml')",
        "+ ",
        "  PEcAn.utils::status.end()",
        "+ ",
        "} else if (file.exists(file.path(settings$outdir, 'pecan.TRAIT.xml'))) {",
        "+ ",
        "  settings <- PEcAn.settings::read.settings(file.path(settings$outdir, 'pecan.TRAIT.xml'))",
        "+ ",
        "}",
        "2019-09-03 19:16:46 DEBUG  [get.trait.data.R#422: PEcAn.logger::logger.debug] : \n   `trait.names` is NULL, so retrieving all traits that have at least one \n   prior for these PFTs. \n",
        "2019-09-03 19:16:47 DEBUG  [get.trait.data.R#155: PEcAn.logger::logger.debug] : \n   All posterior files are present. Performing additional checks to \n   determine if meta-analysis needs to be updated. \n",
        "2019-09-03 19:16:47 WARN   [get.trait.data.R#165: PEcAn.logger::logger.warn] : \n   The following files are in database but not found on disk: \n   'trait.data.Rdata', 'prior.distns.Rdata', 'species.csv' .  Re-running \n   meta-analysis. \n",
        "2019-09-03 19:16:48 INFO   [query.trait.data.R#451: PEcAn.logger::logger.info] : \n   --------------------------------------------------------- \n",
        "2019-09-03 19:16:48 INFO   [query.trait.data.R#452: PEcAn.logger::logger.info] : SLA \n",
        "2019-09-03 19:16:48 INFO   [query.trait.data.R#555: PEcAn.logger::logger.info] : Median SLA : 48.08 \n",
        "2019-09-03 19:16:48 INFO   [query.trait.data.R#556: PEcAn.logger::logger.info] : \n   --------------------------------------------------------- \n",
        "2019-09-03 19:16:48 INFO   [get.trait.data.R#308: PEcAn.logger::logger.info] : \n Number of observations per trait for PFT  'Setaria WT' :\n # A tibble: 1 x 2\n  trait    nn\n  <chr> <int>\n1 SLA      30 \n",
        "2019-09-03 19:16:48 INFO   [get.trait.data.R#346: PEcAn.logger::logger.info] : \n Summary of prior distributions for PFT  'Setaria WT' :\n                                  distn parama paramb   n\nVcmax                            lnorm  3.750   0.30  12\nc2n_leaf                         gamma  4.180   0.13  95\ncuticular_cond                   lnorm  8.400   0.90   0\nSLA                            weibull  2.060  19.00 125\nleaf_respiration_rate_m2         lnorm  0.632   0.65  32\nstomatal_slope.BB                lnorm  1.240   0.28   2\ngrowth_respiration_coefficient    beta 26.000  48.00  NA\nextinction_coefficient_diffuse   gamma  5.000  10.00  NA \n",
        "2019-09-03 19:16:48 DEBUG  [get.trait.data.R#364: PEcAn.logger::logger.debug] : The following posterior files found in PFT outdir  ( '/home/kristinariemer/biocro_darpa_results/pft/Setaria WT' ) will be registered in BETY  under posterior ID  9000000147 :  'prior.distns.csv', 'prior.distns.Rdata', 'species.csv', 'trait.data.csv', 'trait.data.Rdata' .  The following files (if any) will not be registered because they already existed:   \n",
        "> ",
        "",
        "> ",
        "# Run the PEcAn meta.analysis",
        "> ",
        "if(!is.null(settings$meta.analysis)) {",
        "+ ",
        "  if (PEcAn.utils::status.check(\"META\") == 0){",
        "+ ",
        "    PEcAn.utils::status.start(\"META\")",
        "+ ",
        "    PEcAn.MA::runModule.run.meta.analysis(settings)",
        "+ ",
        "    PEcAn.utils::status.end()",
        "+ ",
        "  }",
        "+ ",
        "}",
        "2019-09-03 19:16:49 INFO   [FUN] : \n   ------------------------------------------------------------------- \n",
        "2019-09-03 19:16:49 INFO   [FUN] : \n   Running meta.analysis for PFT: Setaria WT \n",
        "2019-09-03 19:16:49 INFO   [FUN] : \n   ------------------------------------------------------------------- \n",
        "2019-09-03 19:16:49 SEVERE [query.trait.data.R#285: PEcAn.logger::logger.severe] : \n   No control treatment set for site_id 9e+09 and citation id 9000000001. \n   Please set control treatment for this site / citation in database. \n",
        "Error in PEcAn.logger::logger.severe(paste0(\"No control treatment set for site_id \",  : \n  No control treatment set for site_id 9e+09 and citation id 9000000001.\nPlease set control treatment for this site / citation in database.\n",
        "> ",
        "",
        "> ",
        "# Write model specific configs",
        "> ",
        "if (PEcAn.utils::status.check(\"CONFIG\") == 0){",
        "+ ",
        "  PEcAn.utils::status.start(\"CONFIG\")",
        "+ ",
        "  settings <- PEcAn.workflow::runModule.run.write.configs(settings)",
        "+ ",
        "  PEcAn.settings::write.settings(settings, outputfile='pecan.CONFIGS.xml')",
        "+ ",
        "  PEcAn.utils::status.end()",
        "+ ",
        "} else if (file.exists(file.path(settings$outdir, 'pecan.CONFIGS.xml'))) {",
        "+ ",
        "  settings <- PEcAn.settings::read.settings(file.path(settings$outdir, 'pecan.CONFIGS.xml'))",
        "+ ",
        "}",
        "2019-09-03 19:16:49 INFO   [PEcAn.uncertainty::get.parameter.samples] : \n   Selected PFT(s): Setaria WT \n",
        "Warning in rm(prior.distns, post.distns, trait.mcmc) :",
        "\n ",
        " object 'prior.distns' not found\n",
        "Warning in rm(prior.distns, post.distns, trait.mcmc) :",
        "\n ",
        " object 'post.distns' not found\n",
        "Warning in rm(prior.distns, post.distns, trait.mcmc) :",
        "\n ",
        " object 'trait.mcmc' not found\n",
        "2019-09-03 19:16:49 INFO   [PEcAn.uncertainty::get.parameter.samples] : \n   No trait.mcmc file is associated with this posterior ID. \n",
        "2019-09-03 19:16:49 INFO   [PEcAn.uncertainty::get.parameter.samples] : \n   No MCMC results for PFT Setaria WT \n",
        "2019-09-03 19:16:49 INFO   [PEcAn.uncertainty::get.parameter.samples] : \n   PFT Setaria WT will use prior distributions for Vcmax c2n_leaf \n   cuticular_cond SLA leaf_respiration_rate_m2 stomatal_slope.BB \n   growth_respiration_coefficient extinction_coefficient_diffuse \n",
        "2019-09-03 19:16:49 INFO   [PEcAn.uncertainty::get.parameter.samples] : \n   using 20000 samples per trait \n",
        "2019-09-03 19:16:49 INFO   [PEcAn.uncertainty::get.parameter.samples] : \n   Selected Quantiles: '0.159','0.5','0.841' \n",
        "Loading required package: PEcAn.BIOCRO\n",
        "2019-09-03 19:16:49 INFO   [PEcAn.workflow::run.write.configs] : \n   ----- Writing model run config files ---- \n",
        "Read 34 items\n",
        "2019-09-03 19:16:49 WARN   [write.config.BIOCRO] : \n   the following traits parameters are not added to config file: \n   'type','canopyControl','iPlantControl','photoParms','phenoControl','seneControl','soilControl','phenoParms' \n",
        "Read 34 items\n",
        "Read 34 items\n",
        "Read 34 items\n",
        "Read 34 items\n",
        "Read 34 items\n",
        "Read 34 items\n",
        "Read 34 items\n",
        "Read 34 items\n",
        "Read 34 items\n",
        "Read 34 items\n",
        "Read 34 items\n",
        "Read 34 items\n",
        "Read 34 items\n",
        "Read 34 items\n",
        "Read 34 items\n",
        "Read 34 items\n",
        "Read 32 items\n",
        "2019-09-03 19:16:53 INFO   [PEcAn.workflow::run.write.configs] : \n   ###### Finished writing model run config files ##### \n",
        "2019-09-03 19:16:53 INFO   [PEcAn.workflow::run.write.configs] : \n   config files samples in /home/kristinariemer/biocro_darpa_results/run \n",
        "2019-09-03 19:16:53 INFO   [PEcAn.workflow::run.write.configs] : \n   parameter values for runs in \n   /home/kristinariemer/biocro_darpa_results/samples.RData \n",
        "> ",
        "",
        "> ",
        "if ((length(which(commandArgs() == \"--advanced\")) != 0) && ",
        "+ ",
        "    (PEcAn.utils::status.check(\"ADVANCED\") == 0)) {",
        "+ ",
        "  PEcAn.utils::status.start(\"ADVANCED\")",
        "+ ",
        "  q();",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "# Start ecosystem model runs",
        "> ",
        "if (PEcAn.utils::status.check(\"MODEL\") == 0) {",
        "+ ",
        "  PEcAn.utils::status.start(\"MODEL\")",
        "+ ",
        "  PEcAn.remote::runModule.start.model.runs(settings, stop.on.error = FALSE)",
        "+ ",
        "  PEcAn.utils::status.end()",
        "+ ",
        "}",
        "debugging in: PEcAn.remote::runModule.start.model.runs(settings, stop.on.error = FALSE)\ndebug: {\n    if (is.MultiSettings(settings) || is.Settings(settings)) {\n        write <- settings$database$bety$write\n        return(start.model.runs(settings, write, stop.on.error))\n    }\n    else {\n        PEcAn.logger::logger.severe(\"runModule.start.model.runs only works with Settings or MultiSettings\")\n    }\n}\n",
        "Browse[2]> ",
        "settings",
        "$outdir\n[1] \"/home/kristinariemer/biocro_darpa_results\"\n\n$database\n$database$bety\n$database$bety$driver\n[1] \"PostgreSQL\"\n\n$database$bety$user\n[1] \"bety\"\n\n$database$bety$password\n[1] \"bety\"\n\n$database$bety$host\n[1] \"postgres\"\n\n$database$bety$dbname\n[1] \"bety\"\n\n$database$bety$write\n[1] FALSE\n\n\n$database$dbfiles\n[1] \"/home/kristinariemer/biocro_darpa_results/dbfiles\"\n\n\n$pfts\n$pfts$pft\n$pfts$pft$name\n[1] \"Setaria WT\"\n\n$pfts$pft$outdir\n[1] \"/home/kristinariemer/biocro_darpa_results/pft/Setaria WT\"\n\n$pfts$pft$posteriorid\n",
        "[1] 9e+09\n\n\n\n$ensemble\n$ensemble$variable\n[1] \"AbvGrndWood\"\n\n$ensemble$size\n[1] 1\n\n$ensemble$start.year\n[1] 2004\n\n$ensemble$end.year\n[1] 2004\n\n$ensemble$samplingspace\n$ensemble$samplingspace$parameters\n$ensemble$samplingspace$parameters$method\n[1] \"uniform\"\n\n\n$ensemble$samplingspace$met\n$ensemble$samplingspace$met$method\n[1] \"sampling\"\n\n\n\n$ensemble$ensemble.id\n[1] NA\n\n\n$meta.analysis\n$meta.analysis$iter\n[1] \"3000\"\n\n$meta.analysis$random.effects\n$meta.analysis$random.effects$on\n[1] FALSE\n\n$meta.analysis$random.effects$use_ghs\n",
        "[1] TRUE\n\n\n$meta.analysis$threshold\n[1] \"1.2\"\n\n$meta.analysis$update\n[1] \"AUTO\"\n\n\n$sensitivity.analysis\n$sensitivity.analysis$quantiles\n$sensitivity.analysis$quantiles$sigma\n[1] \"-1\"\n\n$sensitivity.analysis$quantiles$sigma\n[1] \"1\"\n\n\n$sensitivity.analysis$variable\n[1] \"AbvGrndWood\"\n\n$sensitivity.analysis$start.year\n[1] 2004\n\n$sensitivity.analysis$end.year\n[1] 2004\n\n$sensitivity.analysis$ensemble.id\n[1] NA\n\n\n$model\n$model$type\n[1] \"BIOCRO\"\n\n$model$binary\n[1] \"/home/kristinariemer/pecan/models/biocro/inst/biocro.Rscript\"",
        "\n\n$model$revision\n[1] \"1.0\"\n\n$model$id\n[1] -1\n\n$model$delete.raw\n[1] FALSE\n\n\n$run\n$run$site\n$run$site$id\n[1] \"9000000000\"\n\n$run$site$name\n[1] \"Donald Danforth Plant Science Center Growth Chamber 157\"\n\n$run$site$lat\n[1] 38.67459\n\n$run$site$lon\n[1] -90.39719\n\n\n$run$inputs\n$run$inputs$met\n$run$inputs$met$output\n[1] \"BIOCRO\"\n\n$run$inputs$met$path\n$run$inputs$met$path$path1\n[1] \"/home/kristinariemer/pecan/models/biocro/tests/testthat/data/US-Bo1\"\n\n\n\n\n$run$start.date\n[1] \"2004/01/01\"\n\n$run$end.date\n[1] \"2004/12/30\"",
        "\n\n\n$host\n$host$name\n[1] \"localhost\"\n\n$host$rundir\n[1] \"/home/kristinariemer/biocro_darpa_results/run\"\n\n$host$outdir\n[1] \"/home/kristinariemer/biocro_darpa_results/out\"\n\n\n$settings.info\n$settings.info$deprecated.settings.fixed\n[1] TRUE\n\n$settings.info$settings.updated\n[1] TRUE\n\n$settings.info$checked\n[1] TRUE\n\n\n$workflow\n$workflow$id\n[1] \"2019-09-03-19-16-46\"\n\n\n$rundir\n[1] \"/home/kristinariemer/biocro_darpa_results/run\"\n\n$modeloutdir\n[1] \"/home/kristinariemer/biocro_darpa_results/out\"\n\nattr(,\"class\")\n[1] \"Settings\"",
        " \"SafeList\" \"list\"    \n",
        "Browse[2]> ",
        "is.MultiSettings(settings)",
        "Error in is.MultiSettings(settings) : \n  could not find function \"is.MultiSettings\"\n",
        "Browse[2]> ",
        "is.Settings(settings)",
        "Error in is.Settings(settings) : could not find function \"is.Settings\"\n",
        "Browse[2]> ",
        "PEcAn.settings::is.MultiSettings(settings)",
        "[1] FALSE\n",
        "Browse[2]> ",
        "PEcAn.settings::is.Settings(settings)",
        "[1] TRUE\n",
        "Browse[2]> ",
        "sessionInfo()",
        "R version 3.5.2 (2018-12-20)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Debian GNU/Linux 9 (stretch)\n\nMatrix products: default\nBLAS: /usr/lib/openblas-base/libblas.so.3\nLAPACK: /usr/lib/libopenblasp-r0.2.19.so\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               LC_TIME=en_US.UTF-8       \n [4] LC_COLLATE=en_US.UTF-8     LC_MONETARY=en_US.UTF-8    LC_MESSAGES=C             \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  LC_ADDRESS=C              \n[10] LC_TELEPHONE=C            ",
        " LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] PEcAn.BIOCRO_1.7.0          bindrcpp_0.2.2              RCurl_1.95-4.11            \n [4] bitops_1.0-6                PEcAn.all_1.7.0             PEcAn.workflow_1.7.0       \n [7] PEcAn.remote_1.7.0          PEcAn.benchmark_1.7.0       PEcAn.emulator_1.7.0       \n[10] MCMCpack_1.4-4              coda_0.19-2                 mlegp_3.1.7                ",
        "\n[13] mvtnorm_1.0-8               PEcAn.assim.batch_1.7.0     PEcAn.data.remote_1.7.0    \n[16] dataone_2.1.2               datapack_1.3.1              PEcAn.data.atmosphere_1.7.0\n[19] PEcAn.uncertainty_1.7.0     gridExtra_2.3               ggmap_2.6.2                \n[22] ggplot2_3.1.0               PEcAn.priors_1.7.0          PEcAn.logger_1.7.0         \n[25] PEcAn.utils_1.7.0           MASS_7.3-51.1               lattice_0.20-38            \n[28] XML_3.98-1.16               PEcAn.DB_1.7.0              testthat_2.0.1             ",
        "\n\nloaded via a namespace (and not attached):\n [1] colorspace_1.4-0      rjson_0.2.20          rgdal_1.3-6           rprojroot_1.3-2      \n [5] base64enc_0.1-3       fs_1.2.6              rstudioapi_0.9.0      roxygen2_6.1.1       \n [9] MatrixModels_0.4-1    remotes_2.0.2         hash_2.2.6            fansi_0.4.0          \n[13] lubridate_1.7.4       xml2_1.2.0            ncdf4_1.16            pkgload_1.0.2        \n[17] jsonlite_1.6          mcmc_0.9-5            dbplyr_1.3.0          png_0.1-7            \n[21]",
        " RPostgreSQL_0.6-2     mapproj_1.2.6         compiler_3.5.2        httr_1.4.0           \n[25] backports_1.1.3       assertthat_0.2.0      Matrix_1.2-15         lazyeval_0.2.1       \n[29] cli_1.0.1             quantreg_5.38         prettyunits_1.0.2     tools_3.5.2          \n[33] gtable_0.2.0          glue_1.3.0            reshape2_1.4.3        dplyr_0.7.8          \n[37] maps_3.3.0            Rcpp_1.0.0            udunits2_0.13         PEcAn.data.land_1.7.0\n[41] PEcAn.MA_1.7.0        stringr_1.3.1         ps_1.3.0             ",
        " proto_1.0.0          \n[45] PEcAn.settings_1.7.0  parsedate_1.1.3       devtools_2.0.1        scales_1.0.0         \n[49] SparseM_1.77          yaml_2.2.0            memoise_1.1.0         geosphere_1.5-7      \n[53] stringi_1.2.4         desc_1.2.0            redland_1.0.17-10     pkgbuild_1.0.2       \n[57] RgoogleMaps_1.4.3     rlang_0.3.1           pkgconfig_2.0.2       commonmark_1.7       \n[61] purrr_0.3.0           bindr_0.1.1           processx_3.2.1        tidyselect_0.2.5     \n[65] plyr_1.8.4           ",
        " magrittr_1.5          R6_2.3.0              DBI_1.0.0            \n[69] pillar_1.3.1          withr_2.1.2           sp_1.3-1              tibble_2.0.1         \n[73] crayon_1.3.4          uuid_0.1-2            utf8_1.1.4            jpeg_0.1-8           \n[77] usethis_1.4.0         grid_3.5.2            data.table_1.12.0     callr_3.1.1          \n[81] digest_0.6.18         tidyr_0.8.2           munsell_0.5.0         sessioninfo_1.1.1    \n\nRestarting R session...\n\n",
        "> ",
        "#!/usr/bin/env Rscript",
        "> ",
        "#-------------------------------------------------------------------------------",
        "> ",
        "# Copyright (c) 2012 University of Illinois, NCSA.",
        "> ",
        "# All rights reserved. This program and the accompanying materials",
        "> ",
        "# are made available under the terms of the ",
        "> ",
        "# University of Illinois/NCSA Open Source License",
        "> ",
        "# which accompanies this distribution, and is available at",
        "> ",
        "# http://opensource.ncsa.illinois.edu/license.html",
        "> ",
        "#-------------------------------------------------------------------------------",
        "> ",
        "",
        "> ",
        "# ----------------------------------------------------------------------",
        "> ",
        "# Load required libraries",
        "> ",
        "# ----------------------------------------------------------------------",
        "> ",
        "#.libPaths()",
        "> ",
        "devtools::load_all(\"pecan/base/db/\")",
        "Loading PEcAn.DB\n",
        "> ",
        "devtools::load_all(\"pecan/base/all/\")",
        "Loading PEcAn.all\n",
        "Loading required package: PEcAn.settings\n",
        "Failed with error:  ",
        "",
        "‘package ‘PEcAn.DB’ required by ‘PEcAn.settings’ could not be found’",
        "",
        "\n",
        "Loading required package: PEcAn.MA\n",
        "Loading required package: XML\n",
        "Loading required package: lattice\n",
        "Loading required package: MASS\n",
        "Loading required package: PEcAn.utils\n",
        "\nAttaching package: ‘PEcAn.utils’\n\n",
        "The following object is masked from ‘package:utils’:\n\n    download.file\n\n",
        "Failed with error:  ",
        "",
        "‘package ‘PEcAn.DB’ required by ‘PEcAn.MA’ could not be found’",
        "",
        "\n",
        "Loading required package: PEcAn.logger\n",
        "\nAttaching package: ‘PEcAn.logger’\n\n",
        "The following objects are masked from ‘package:PEcAn.utils’:\n\n    logger.debug, logger.error, logger.getLevel, logger.info, logger.setLevel,\n    logger.setOutputFile, logger.setQuitOnSevere, logger.setWidth, logger.severe,\n    logger.warn\n\n",
        "Loading required package: PEcAn.uncertainty\n",
        "Loading required package: PEcAn.priors\n",
        "Loading required package: ggplot2\n",
        "Loading required package: ggmap\n",
        "Google Maps API Terms of Service: http://developers.google.com/maps/terms.\n",
        "Please cite ggmap if you use it: see citation('ggmap') for details.\n",
        "Loading required package: gridExtra\n",
        "\nAttaching package: ‘PEcAn.uncertainty’\n\n",
        "The following objects are masked from ‘package:PEcAn.utils’:\n\n    get.ensemble.samples, read.ensemble.output, write.ensemble.configs\n\n",
        "Loading required package: PEcAn.data.atmosphere\n",
        "Loading required package: PEcAn.data.land\n",
        "Loading required package: datapack\n",
        "Loading required package: dataone\n",
        "Failed with error:  ",
        "",
        "‘package ‘PEcAn.DB’ required by ‘PEcAn.data.land’ could not be found’",
        "",
        "\n",
        "Loading required package: PEcAn.data.remote\n",
        "Loading required package: PEcAn.assim.batch\n",
        "Loading required package: PEcAn.emulator\n",
        "Loading required package: mvtnorm\n",
        "Loading required package: mlegp\n",
        "Loading required package: MCMCpack\n",
        "Loading required package: coda\n",
        "##\n## Markov Chain Monte Carlo Package (MCMCpack)\n",
        "## Copyright (C) 2003-2019 Andrew D. Martin, Kevin M. Quinn, and Jong Hee Park\n",
        "##\n## Support provided by the U.S. National Science Foundation\n",
        "## (Grants SES-0350646 and SES-0350613)\n##\n",
        "Loading required package: PEcAn.benchmark\n",
        "Loading required package: PEcAn.remote\n",
        "Loading required package: PEcAn.workflow\n",
        "\nAttaching package: ‘PEcAn.workflow’\n\n",
        "The following objects are masked from ‘package:PEcAn.utils’:\n\n    do_conversions, run.write.configs, runModule.run.write.configs\n\n",
        "> ",
        "#library(PEcAn.all)",
        "> ",
        "#debugonce(PEcAn.DB::get.trait.data.pft)",
        "> ",
        "debugonce(PEcAn.remote::runModule.start.model.runs)",
        "> ",
        "library(PEcAn.utils)",
        "> ",
        "library(RCurl)",
        "Loading required package: bitops\n",
        "> ",
        "",
        "> ",
        "# make sure always to call status.end",
        "> ",
        "options(warn=1)",
        "> ",
        "options(error=quote({",
        "+ ",
        "  PEcAn.utils::status.end(\"ERROR\")",
        "+ ",
        "  PEcAn.remote::kill.tunnel(settings)",
        "+ ",
        "  if (!interactive()) {",
        "+ ",
        "    q(status = 1)",
        "+ ",
        "  }",
        "+ ",
        "}))",
        "> ",
        "",
        "> ",
        "#options(warning.expression=status.end(\"ERROR\"))",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "# ----------------------------------------------------------------------",
        "> ",
        "# PEcAn Workflow",
        "> ",
        "# ----------------------------------------------------------------------",
        "> ",
        "# Open and read in settings file for PEcAn run.",
        "> ",
        "args <- commandArgs(trailingOnly = TRUE)",
        "> ",
        "if (is.na(args[1])){",
        "+ ",
        "  settings <- PEcAn.settings::read.settings(\"biocro_darpa_files/pecan.biocro.darpa.xml\") ",
        "+ ",
        "} else {",
        "+ ",
        "  settings.file <- args[1]",
        "+ ",
        "  settings <- PEcAn.settings::read.settings(settings.file)",
        "+ ",
        "}",
        "2019-09-03 19:22:58 INFO   [#2: PEcAn.settings::read.settings] : \n   Loading inpufile= biocro_darpa_files/pecan.biocro.darpa.xml \n",
        "> ",
        "",
        "> ",
        "# Check for additional modules that will require adding settings",
        "> ",
        "if(\"benchmarking\" %in% names(settings)){",
        "+ ",
        "  library(PEcAn.benchmark)",
        "+ ",
        "  settings <- papply(settings, read_settings_BRR)",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "if(\"sitegroup\" %in% names(settings)){",
        "+ ",
        "  if(is.null(settings$sitegroup$nSite)){",
        "+ ",
        "    settings <- PEcAn.settings::createSitegroupMultiSettings(settings, ",
        "+ ",
        "                                                             sitegroupId = settings$sitegroup$id)",
        "+ ",
        "  } else {",
        "+ ",
        "    settings <- PEcAn.settings::createSitegroupMultiSettings(settings, ",
        "+ ",
        "                                                             sitegroupId = settings$sitegroup$id,",
        "+ ",
        "                                                             nSite = settings$sitegroup$nSite)",
        "+ ",
        "  }",
        "+ ",
        "  settings$sitegroup <- NULL ## zero out so don't expand a second time if re-reading",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "# Update/fix/check settings. Will only run the first time it's called, unless force=TRUE",
        "> ",
        "settings <- PEcAn.settings::prepare.settings(settings, force = FALSE)",
        "2019-09-03 19:22:58 INFO   [fix.deprecated.settings] : \n   Fixing deprecated settings... \n",
        "2019-09-03 19:22:58 INFO   [fix.deprecated.settings] : \n   settings$run$host is deprecated. uwe settings$host instead \n",
        "2019-09-03 19:22:58 INFO   [update.settings] : \n   Fixing deprecated settings... \n",
        "2019-09-03 19:22:58 INFO   [check.settings] : Checking settings... \n",
        "2019-09-03 19:22:58 INFO   [check.database] : \n   Successfully connected to database : PostgreSQL bety bety postgres bety \n   FALSE \n",
        "2019-09-03 19:22:58 WARN   [check.database.settings] : \n   Will not write runs/configurations to database. \n",
        "2019-09-03 19:22:59 WARN   [check.bety.version] : \n   Last migration 20181129000515 is more recent than expected \n   20141009160121. This could result in PEcAn not working as expected. \n",
        "2019-09-03 19:22:59 INFO   [check.ensemble.settings] : \n   Setting ensemble size to 1. \n",
        "2019-09-03 19:22:59 INFO   [check.ensemble.settings] : \n   No start date passed to ensemble - using the run date ( 2004 ). \n",
        "2019-09-03 19:22:59 INFO   [check.ensemble.settings] : \n   No end date passed to ensemble - using the run date ( 2004 ). \n",
        "2019-09-03 19:22:59 INFO   [check.ensemble.settings] : \n   We are updating the ensemble tag inside the xml file. \n",
        "2019-09-03 19:22:59 INFO   [fn] : \n   No start date passed to sensitivity.analysis - using the run date ( 2004 \n   ). \n",
        "2019-09-03 19:22:59 INFO   [fn] : \n   No end date passed to sensitivity.analysis - using the run date ( 2004 \n   ). \n",
        "2019-09-03 19:22:59 INFO   [fn] : \n   Setting site name to Donald Danforth Plant Science Center Growth Chamber \n   157 \n",
        "2019-09-03 19:22:59 INFO   [fn] : \n   Setting site lat to 38.674593 \n",
        "2019-09-03 19:22:59 INFO   [fn] : \n   Setting site lon to -90.397189 \n",
        "2019-09-03 19:22:59 WARN   [check.model.settings] : \n   Model type BIOCRO not in database \n",
        "2019-09-03 19:22:59 INFO   [check.model.settings] : \n   Setting model id to -1 \n",
        "2019-09-03 19:22:59 INFO   [check.model.settings] : \n   Option to delete raw model output not set or not logical. Will keep all \n   model output. \n",
        "2019-09-03 19:22:59 WARN   [check.model.settings] : \n   No model binary sepcified in database for model BIOCRO \n",
        "2019-09-03 19:22:59 WARN   [check.settings] : \n   settings$database$dbfiles pathname biocro_darpa_results/dbfiles is \n   invalid \n  \n   placing it in the home directory /home/kristinariemer \n",
        "2019-09-03 19:22:59 INFO   [fn] : \n   Missing optional input : soil \n",
        "2019-09-03 19:22:59 WARN   [dbfiles.R#642: PEcAn.logger::logger.warn] : \n   no id found for \n   /home/kristinariemer/pecan/models/biocro/tests/testthat/data/US-Bo1 in \n   database \n",
        "2019-09-03 19:22:59 INFO   [fn] : \n   path /home/kristinariemer/pecan/models/biocro/tests/testthat/data/US-Bo1 \n",
        "2019-09-03 19:22:59 INFO   [fn] : \n   path /home/kristinariemer/pecan/models/biocro/tests/testthat/data/US-Bo1 \n",
        "2019-09-03 19:22:59 INFO   [check.workflow.settings] : \n   output folder = /home/kristinariemer/biocro_darpa_results \n",
        "2019-09-03 19:22:59 INFO   [check.settings] : \n   Storing pft Setaria WT in \n   /home/kristinariemer/biocro_darpa_results/pft/Setaria WT \n",
        "> ",
        "",
        "> ",
        "# Write pecan.CHECKED.xml",
        "> ",
        "PEcAn.settings::write.settings(settings, outputfile = \"pecan.CHECKED.xml\")",
        "[1] \"/home/kristinariemer/biocro_darpa_results/pecan.CHECKED.xml\"\n",
        "> ",
        "",
        "> ",
        "# start from scratch if no continue is passed in",
        "> ",
        "statusFile <- file.path(settings$outdir, \"STATUS\")",
        "> ",
        "if (length(which(commandArgs() == \"--continue\")) == 0 && file.exists(statusFile)) {",
        "+ ",
        "  file.remove(statusFile)",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "# Do conversions",
        "> ",
        "settings <- PEcAn.workflow::do_conversions(settings)",
        "2019-09-03 19:22:59 DEBUG  [PEcAn.workflow::do_conversions] : \n   do.conversion outdir /home/kristinariemer/biocro_darpa_results/dbfiles \n",
        "2019-09-03 19:22:59 INFO   [PEcAn.workflow::do_conversions] : PROCESSING:  met \n",
        "2019-09-03 19:22:59 INFO   [PEcAn.workflow::do_conversions] : \n   calling met.process: \n   /home/kristinariemer/pecan/models/biocro/tests/testthat/data/US-Bo1 \n",
        "2019-09-03 19:22:59 WARN   [PEcAn.data.atmosphere::met.process] : \n   met.process only has a path provided, assuming path is model driver and \n   skipping processing \n",
        "2019-09-03 19:22:59 DEBUG  [PEcAn.workflow::do_conversions] : \n   updated met path: \n   /home/kristinariemer/pecan/models/biocro/tests/testthat/data/US-Bo1 \n",
        "> ",
        "",
        "> ",
        "# Query the trait database for data and priors",
        "> ",
        "if (PEcAn.utils::status.check(\"TRAIT\") == 0){",
        "+ ",
        "  PEcAn.utils::status.start(\"TRAIT\")",
        "+ ",
        "  settings <- PEcAn.workflow::runModule.get.trait.data(settings)",
        "+ ",
        "  PEcAn.settings::write.settings(settings, outputfile='pecan.TRAIT.xml')",
        "+ ",
        "  PEcAn.utils::status.end()",
        "+ ",
        "} else if (file.exists(file.path(settings$outdir, 'pecan.TRAIT.xml'))) {",
        "+ ",
        "  settings <- PEcAn.settings::read.settings(file.path(settings$outdir, 'pecan.TRAIT.xml'))",
        "+ ",
        "}",
        "2019-09-03 19:22:59 DEBUG  [get.trait.data.R#422: PEcAn.logger::logger.debug] : \n   `trait.names` is NULL, so retrieving all traits that have at least one \n   prior for these PFTs. \n",
        "2019-09-03 19:23:00 DEBUG  [get.trait.data.R#155: PEcAn.logger::logger.debug] : \n   All posterior files are present. Performing additional checks to \n   determine if meta-analysis needs to be updated. \n",
        "2019-09-03 19:23:00 WARN   [get.trait.data.R#165: PEcAn.logger::logger.warn] : \n   The following files are in database but not found on disk: \n   'trait.data.Rdata', 'prior.distns.Rdata', 'species.csv' .  Re-running \n   meta-analysis. \n",
        "2019-09-03 19:23:01 INFO   [query.trait.data.R#451: PEcAn.logger::logger.info] : \n   --------------------------------------------------------- \n",
        "2019-09-03 19:23:01 INFO   [query.trait.data.R#452: PEcAn.logger::logger.info] : SLA \n",
        "2019-09-03 19:23:01 INFO   [query.trait.data.R#555: PEcAn.logger::logger.info] : Median SLA : 48.08 \n",
        "2019-09-03 19:23:01 INFO   [query.trait.data.R#556: PEcAn.logger::logger.info] : \n   --------------------------------------------------------- \n",
        "2019-09-03 19:23:01 INFO   [get.trait.data.R#308: PEcAn.logger::logger.info] : \n Number of observations per trait for PFT  'Setaria WT' :\n # A tibble: 1 x 2\n  trait    nn\n  <chr> <int>\n1 SLA      30 \n",
        "2019-09-03 19:23:01 INFO   [get.trait.data.R#346: PEcAn.logger::logger.info] : \n Summary of prior distributions for PFT  'Setaria WT' :\n                                  distn parama paramb   n\nVcmax                            lnorm  3.750   0.30  12\nc2n_leaf                         gamma  4.180   0.13  95\ncuticular_cond                   lnorm  8.400   0.90   0\nSLA                            weibull  2.060  19.00 125\nleaf_respiration_rate_m2         lnorm  0.632   0.65  32\nstomatal_slope.BB                lnorm  1.240   0.28   2\ngrowth_respiration_coefficient    beta 26.000  48.00  NA\nextinction_coefficient_diffuse   gamma  5.000  10.00  NA \n",
        "2019-09-03 19:23:01 DEBUG  [get.trait.data.R#364: PEcAn.logger::logger.debug] : The following posterior files found in PFT outdir  ( '/home/kristinariemer/biocro_darpa_results/pft/Setaria WT' ) will be registered in BETY  under posterior ID  9000000148 :  'prior.distns.csv', 'prior.distns.Rdata', 'species.csv', 'trait.data.csv', 'trait.data.Rdata' .  The following files (if any) will not be registered because they already existed:   \n",
        "> ",
        "",
        "> ",
        "# Run the PEcAn meta.analysis",
        "> ",
        "if(!is.null(settings$meta.analysis)) {",
        "+ ",
        "  if (PEcAn.utils::status.check(\"META\") == 0){",
        "+ ",
        "    PEcAn.utils::status.start(\"META\")",
        "+ ",
        "    PEcAn.MA::runModule.run.meta.analysis(settings)",
        "+ ",
        "    PEcAn.utils::status.end()",
        "+ ",
        "  }",
        "+ ",
        "}",
        "2019-09-03 19:23:02 INFO   [FUN] : \n   ------------------------------------------------------------------- \n",
        "2019-09-03 19:23:02 INFO   [FUN] : \n   Running meta.analysis for PFT: Setaria WT \n",
        "2019-09-03 19:23:02 INFO   [FUN] : \n   ------------------------------------------------------------------- \n",
        "2019-09-03 19:23:02 SEVERE [query.trait.data.R#285: PEcAn.logger::logger.severe] : \n   No control treatment set for site_id 9e+09 and citation id 9000000001. \n   Please set control treatment for this site / citation in database. \n",
        "Error in PEcAn.logger::logger.severe(paste0(\"No control treatment set for site_id \",  : \n  No control treatment set for site_id 9e+09 and citation id 9000000001.\nPlease set control treatment for this site / citation in database.\n",
        "> ",
        "",
        "> ",
        "# Write model specific configs",
        "> ",
        "if (PEcAn.utils::status.check(\"CONFIG\") == 0){",
        "+ ",
        "  PEcAn.utils::status.start(\"CONFIG\")",
        "+ ",
        "  settings <- PEcAn.workflow::runModule.run.write.configs(settings)",
        "+ ",
        "  PEcAn.settings::write.settings(settings, outputfile='pecan.CONFIGS.xml')",
        "+ ",
        "  PEcAn.utils::status.end()",
        "+ ",
        "} else if (file.exists(file.path(settings$outdir, 'pecan.CONFIGS.xml'))) {",
        "+ ",
        "  settings <- PEcAn.settings::read.settings(file.path(settings$outdir, 'pecan.CONFIGS.xml'))",
        "+ ",
        "}",
        "2019-09-03 19:23:02 INFO   [PEcAn.uncertainty::get.parameter.samples] : \n   Selected PFT(s): Setaria WT \n",
        "Warning in rm(prior.distns, post.distns, trait.mcmc) :",
        "\n ",
        " object 'prior.distns' not found\n",
        "Warning in rm(prior.distns, post.distns, trait.mcmc) :",
        "\n ",
        " object 'post.distns' not found\n",
        "Warning in rm(prior.distns, post.distns, trait.mcmc) :",
        "\n ",
        " object 'trait.mcmc' not found\n",
        "2019-09-03 19:23:02 INFO   [PEcAn.uncertainty::get.parameter.samples] : \n   No trait.mcmc file is associated with this posterior ID. \n",
        "2019-09-03 19:23:02 INFO   [PEcAn.uncertainty::get.parameter.samples] : \n   No MCMC results for PFT Setaria WT \n",
        "2019-09-03 19:23:02 INFO   [PEcAn.uncertainty::get.parameter.samples] : \n   PFT Setaria WT will use prior distributions for Vcmax c2n_leaf \n   cuticular_cond SLA leaf_respiration_rate_m2 stomatal_slope.BB \n   growth_respiration_coefficient extinction_coefficient_diffuse \n",
        "2019-09-03 19:23:02 INFO   [PEcAn.uncertainty::get.parameter.samples] : \n   using 20000 samples per trait \n",
        "2019-09-03 19:23:02 INFO   [PEcAn.uncertainty::get.parameter.samples] : \n   Selected Quantiles: '0.159','0.5','0.841' \n",
        "Loading required package: PEcAn.BIOCRO\n",
        "2019-09-03 19:23:03 INFO   [PEcAn.workflow::run.write.configs] : \n   ----- Writing model run config files ---- \n",
        "Read 34 items\n",
        "2019-09-03 19:23:03 WARN   [write.config.BIOCRO] : \n   the following traits parameters are not added to config file: \n   'type','canopyControl','iPlantControl','photoParms','phenoControl','seneControl','soilControl','phenoParms' \n",
        "Read 34 items\n",
        "Read 34 items\n",
        "Read 34 items\n",
        "Read 34 items\n",
        "Read 34 items\n",
        "Read 34 items\n",
        "Read 34 items\n",
        "Read 34 items\n",
        "Read 34 items\n",
        "Read 34 items\n",
        "Read 34 items\n",
        "Read 34 items\n",
        "Read 34 items\n",
        "Read 34 items\n",
        "Read 34 items\n",
        "Read 34 items\n",
        "Read 32 items\n",
        "2019-09-03 19:23:06 INFO   [PEcAn.workflow::run.write.configs] : \n   ###### Finished writing model run config files ##### \n",
        "2019-09-03 19:23:06 INFO   [PEcAn.workflow::run.write.configs] : \n   config files samples in /home/kristinariemer/biocro_darpa_results/run \n",
        "2019-09-03 19:23:06 INFO   [PEcAn.workflow::run.write.configs] : \n   parameter values for runs in \n   /home/kristinariemer/biocro_darpa_results/samples.RData \n",
        "> ",
        "",
        "> ",
        "if ((length(which(commandArgs() == \"--advanced\")) != 0) && ",
        "+ ",
        "    (PEcAn.utils::status.check(\"ADVANCED\") == 0)) {",
        "+ ",
        "  PEcAn.utils::status.start(\"ADVANCED\")",
        "+ ",
        "  q();",
        "+ ",
        "}",
        "> ",
        "library(PEcAn.settings)",
        "Error: package ‘PEcAn.DB’ required by ‘PEcAn.settings’ could not be found\n",
        "> ",
        "devtools::load_all(\"pecan/base/settings/\")",
        "Loading PEcAn.settings\n",
        "> ",
        "# Start ecosystem model runs",
        "> ",
        "if (PEcAn.utils::status.check(\"MODEL\") == 0) {",
        "+ ",
        "  PEcAn.utils::status.start(\"MODEL\")",
        "+ ",
        "  PEcAn.remote::runModule.start.model.runs(settings, stop.on.error = FALSE)",
        "+ ",
        "  PEcAn.utils::status.end()",
        "+ ",
        "}",
        "Error in utils::read.table(status.file, row.names = 1, header = FALSE,  : \n  duplicate 'row.names' are not allowed\n",
        "\nRestarting R session...\n\n",
        "> ",
        ".libPaths",
        "function (new) \n{\n    if (!missing(new)) {\n        new <- Sys.glob(path.expand(new))\n        paths <- c(new, .Library.site, .Library)\n        paths <- paths[dir.exists(paths)]\n        .lib.loc <<- unique(normalizePath(paths, \"/\"))\n    }\n    else .lib.loc\n}\n<bytecode: 0x2f531c8>\n<environment: 0x2f4e9d8>\n",
        "> ",
        ".libPaths()",
        "[1] \"/home/kristinariemer/R_libs\"   \"/usr/local/lib/R/site-library\"\n[3] \"/usr/local/lib/R/library\"     \n",
        "> ",
        "library(PEcAn.all)",
        "Loading required package: PEcAn.DB\n",
        "Loading required package: PEcAn.settings\n",
        "Loading required package: PEcAn.MA\n",
        "Loading required package: XML\n",
        "Loading required package: lattice\n",
        "Loading required package: MASS\n",
        "Loading required package: PEcAn.utils\n",
        "\nAttaching package: ‘PEcAn.utils’\n\n",
        "The following object is masked from ‘package:utils’:\n\n    download.file\n\n",
        "Loading required package: PEcAn.logger\n",
        "\nAttaching package: ‘PEcAn.logger’\n\n",
        "The following objects are masked from ‘package:PEcAn.utils’:\n\n    logger.debug, logger.error, logger.getLevel, logger.info,\n    logger.setLevel, logger.setOutputFile, logger.setQuitOnSevere,\n    logger.setWidth, logger.severe, logger.warn\n\n",
        "Loading required package: PEcAn.uncertainty\n",
        "Loading required package: PEcAn.priors\n",
        "Loading required package: ggplot2\n",
        "Loading required package: ggmap\n",
        "Google Maps API Terms of Service: http://developers.google.com/maps/terms.\n",
        "Please cite ggmap if you use it: see citation('ggmap') for details.\n",
        "Loading required package: gridExtra\n",
        "\nAttaching package: ‘PEcAn.uncertainty’\n\n",
        "The following objects are masked from ‘package:PEcAn.utils’:\n\n    get.ensemble.samples, read.ensemble.output, write.ensemble.configs\n\n",
        "Loading required package: PEcAn.data.atmosphere\n",
        "Loading required package: xts\n",
        "Loading required package: zoo\n",
        "\nAttaching package: ‘zoo’\n\n",
        "The following objects are masked from ‘package:base’:\n\n    as.Date, as.Date.numeric\n\n",
        "Loading required package: PEcAn.data.land\n",
        "Loading required package: datapack\n",
        "Loading required package: dataone\n",
        "Loading required package: redland\n",
        "Loading required package: sirt\n",
        "- sirt 3.1-80 (2019-01-04 12:08:59)\n",
        "Loading required package: sf\n",
        "Linking to GEOS 3.5.1, GDAL 2.1.2, PROJ 4.9.3\n",
        "Loading required package: PEcAn.data.remote\n",
        "Loading required package: PEcAn.assim.batch\n",
        "Loading required package: PEcAn.emulator\n",
        "Loading required package: mvtnorm\n",
        "Loading required package: mlegp\n",
        "Loading required package: MCMCpack\n",
        "Loading required package: coda\n",
        "##\n## Markov Chain Monte Carlo Package (MCMCpack)\n",
        "## Copyright (C) 2003-2019 Andrew D. Martin, Kevin M. Quinn, and Jong Hee Park\n",
        "##\n## Support provided by the U.S. National Science Foundation\n",
        "## (Grants SES-0350646 and SES-0350613)\n##\n",
        "Loading required package: PEcAn.benchmark\n",
        "Loading required package: PEcAn.remote\n",
        "Loading required package: PEcAn.workflow\n",
        "\nAttaching package: ‘PEcAn.workflow’\n\n",
        "The following objects are masked from ‘package:PEcAn.utils’:\n\n    do_conversions, run.write.configs, runModule.run.write.configs\n\n",
        "Warning messages:\n",
        "1: replacing previous import ‘dplyr::last’ by ‘xts::last’ when loading ‘PEcAn.data.atmosphere’ \n",
        "2: replacing previous import ‘dplyr::first’ by ‘xts::first’ when loading ‘PEcAn.data.atmosphere’ \n",
        "\nRestarting R session...\n\n",
        "> ",
        "library(PEcAn.all)",
        "Loading required package: PEcAn.DB\n",
        "Loading required package: PEcAn.settings\n",
        "Loading required package: PEcAn.MA\n",
        "Loading required package: XML\n",
        "Loading required package: lattice\n",
        "Loading required package: MASS\n",
        "Loading required package: PEcAn.utils\n",
        "\nAttaching package: ‘PEcAn.utils’\n\n",
        "The following object is masked from ‘package:utils’:\n\n    download.file\n\n",
        "Loading required package: PEcAn.logger\n",
        "\nAttaching package: ‘PEcAn.logger’\n\n",
        "The following objects are masked from ‘package:PEcAn.utils’:\n\n    logger.debug, logger.error, logger.getLevel, logger.info, logger.setLevel,\n    logger.setOutputFile, logger.setQuitOnSevere, logger.setWidth,\n    logger.severe, logger.warn\n\n",
        "Loading required package: PEcAn.uncertainty\n",
        "Loading required package: PEcAn.priors\n",
        "Loading required package: ggplot2\n",
        "Loading required package: ggmap\n",
        "Google Maps API Terms of Service: http://developers.google.com/maps/terms.\n",
        "Please cite ggmap if you use it: see citation('ggmap') for details.\n",
        "Loading required package: gridExtra\n",
        "\nAttaching package: ‘PEcAn.uncertainty’\n\n",
        "The following objects are masked from ‘package:PEcAn.utils’:\n\n    get.ensemble.samples, read.ensemble.output, write.ensemble.configs\n\n",
        "Loading required package: PEcAn.data.atmosphere\n",
        "Loading required package: xts\n",
        "Loading required package: zoo\n",
        "\nAttaching package: ‘zoo’\n\n",
        "The following objects are masked from ‘package:base’:\n\n    as.Date, as.Date.numeric\n\n",
        "Loading required package: PEcAn.data.land\n",
        "Loading required package: datapack\n",
        "Loading required package: dataone\n",
        "Loading required package: redland\n",
        "Loading required package: sirt\n",
        "- sirt 3.1-80 (2019-01-04 12:08:59)\n",
        "Loading required package: sf\n",
        "Linking to GEOS 3.5.1, GDAL 2.1.2, PROJ 4.9.3\n",
        "Loading required package: PEcAn.data.remote\n",
        "Loading required package: PEcAn.assim.batch\n",
        "Loading required package: PEcAn.emulator\n",
        "Loading required package: mvtnorm\n",
        "Loading required package: mlegp\n",
        "Loading required package: MCMCpack\n",
        "Loading required package: coda\n",
        "##\n## Markov Chain Monte Carlo Package (MCMCpack)\n",
        "## Copyright (C) 2003-2019 Andrew D. Martin, Kevin M. Quinn, and Jong Hee Park\n",
        "##\n## Support provided by the U.S. National Science Foundation\n",
        "## (Grants SES-0350646 and SES-0350613)\n##\n",
        "Loading required package: PEcAn.benchmark\n",
        "Loading required package: PEcAn.remote\n",
        "Loading required package: PEcAn.workflow\n",
        "\nAttaching package: ‘PEcAn.workflow’\n\n",
        "The following objects are masked from ‘package:PEcAn.utils’:\n\n    do_conversions, run.write.configs, runModule.run.write.configs\n\n",
        "Warning messages:\n",
        "1: replacing previous import ‘dplyr::last’ by ‘xts::last’ when loading ‘PEcAn.data.atmosphere’ \n",
        "2: replacing previous import ‘dplyr::first’ by ‘xts::first’ when loading ‘PEcAn.data.atmosphere’ \n",
        "> ",
        "get.trait.data.pft",
        "function (pft, modeltype, dbfiles, dbcon, trait.names, forceupdate = FALSE) \n{\n    if (!file.exists(pft$outdir) && !dir.create(pft$outdir, recursive = TRUE)) {\n        PEcAn.logger::logger.error(paste0(\"Couldn't create PFT output directory: \", \n            pft$outdir))\n    }\n    old.files <- list.files(path = pft$outdir, full.names = TRUE, \n        include.dirs = FALSE)\n    file.remove(old.files)\n    pftres <- query_pfts(dbcon, pft[[\"name\"]], modeltype)\n    pfttype <- pftres[[\"pft_type\"]]\n    pftid <- pftres[[\"id\"]]\n",
        "    if (nrow(pftres) > 1) {\n        PEcAn.logger::logger.severe(\"Multiple PFTs named\", pft[[\"name\"]], \n            \"found,\", \"with ids\", PEcAn.utils::vecpaste(pftres[[\"id\"]]), \n            \".\", \"Specify modeltype to fix this.\")\n    }\n    if (nrow(pftres) == 0) {\n        PEcAn.logger::logger.severe(\"Could not find pft\", pft[[\"name\"]])\n        return(NA)\n    }\n    if (pfttype == \"plant\") {\n        pft_member_filename = \"species.csv\"\n        pft_members <- PEcAn.DB::query.pft_species(pft$name, \n            modeltype, dbcon)\n",
        "    }\n    else if (pfttype == \"cultivar\") {\n        pft_member_filename = \"cultivars.csv\"\n        pft_members <- PEcAn.DB::query.pft_cultivars(pft$name, \n            modeltype, dbcon)\n    }\n    else {\n        PEcAn.logger::logger.severe(\"Unknown pft type! Expected 'plant' or 'cultivar', got\", \n            pfttype)\n    }\n    pft_members <- pft_members %>% dplyr::mutate_if(is.character, \n        ~dplyr::na_if(., \"\"))\n    prior.distns <- PEcAn.DB::query.priors(pft = pftid, trstr = PEcAn.utils::vecpaste(trait.names), \n",
        "        con = dbcon)\n    prior.distns <- prior.distns[which(!rownames(prior.distns) %in% \n        names(pft$constants)), ]\n    traits <- rownames(prior.distns)\n    trait.data.check <- PEcAn.DB::query.traits(ids = pft_members$id, \n        priors = traits, con = dbcon, update.check.only = TRUE, \n        ids_are_cultivars = (pfttype == \"cultivar\"))\n    traits <- names(trait.data.check)\n    if (!is.logical(forceupdate)) {\n        forceupdate <- FALSE\n    }\n    if (!forceupdate) {\n        if (is.null(pft$posteriorid)) {\n",
        "            pft$posteriorid <- dplyr::tbl(dbcon, \"posteriors\") %>% \n                dplyr::filter(pft_id == !!pftid) %>% dplyr::arrange(dplyr::desc(created_at)) %>% \n                head(1) %>% dplyr::pull(id)\n        }\n        if (!is.null(pft$posteriorid)) {\n            files <- dbfile.check(type = \"Posterior\", container.id = pft$posteriorid, \n                con = dbcon, return.all = TRUE)\n            need_files <- c(trait_data = \"trait.data.Rdata\", \n                priors = \"prior.distns.Rdata\", pft_membership = pft_member_filename)\n",
        "            ids <- match(need_files, files$file_name)\n            names(ids) <- names(need_files)\n            if (any(is.na(ids))) {\n                missing_files <- need_files[is.na(ids)]\n                PEcAn.logger::logger.info(paste0(\"Forcing meta-analysis update because \", \n                  \"the following files are missing from the posterior: \", \n                  paste0(shQuote(missing_files), collapse = \", \")))\n                PEcAn.logger::logger.debug(\"\\n `dbfile.check` returned the following output:\\n\", \n",
        "                  PEcAn.logger::print2string(files), wrap = FALSE)\n            }\n            else {\n                PEcAn.logger::logger.debug(\"All posterior files are present. Performing additional checks \", \n                  \"to determine if meta-analysis needs to be updated.\")\n                need_paths <- file.path(files$file_path[ids], \n                  need_files)\n                names(need_paths) <- names(need_files)\n                files_exist <- file.exists(need_paths)\n                foundallfiles <- all(files_exist)\n",
        "                if (!foundallfiles) {\n                  PEcAn.logger::logger.warn(\"The following files are in database but not found on disk: \", \n                    paste(shQuote(need_files[!files_exist]), \n                      collapse = \", \"), \". \", \"Re-running meta-analysis.\")\n                }\n                else {\n                  PEcAn.logger::logger.debug(\"Checking if PFT membership has changed.\")\n                  existing_membership <- utils::read.csv(need_paths[[\"pft_membership\"]], \n                    colClasses = c(\"double\", \"character\", \"character\", \n",
        "                      \"character\"), stringsAsFactors = FALSE, \n                    na.strings = \"\")\n                  diff_membership <- symmetric_setdiff(existing_membership, \n                    pft_members, xname = \"existing\", yname = \"current\")\n                  if (nrow(diff_membership) > 0) {\n                    PEcAn.logger::logger.error(\"\\n PFT membership has changed. \\n\", \n                      \"Difference is:\\n\", PEcAn.logger::print2string(diff_membership), \n                      wrap = FALSE)\n                    foundallfiles <- FALSE\n",
        "                  }\n                  PEcAn.logger::logger.debug(\"Checking if priors have changed\")\n                  existing_prior <- PEcAn.utils::load_local(need_paths[[\"priors\"]])[[\"prior.distns\"]]\n                  diff_prior <- symmetric_setdiff(dplyr::as_tibble(prior.distns, \n                    rownames = \"trait\"), dplyr::as_tibble(existing_prior, \n                    rownames = \"trait\"))\n                  if (nrow(diff_prior) > 0) {\n                    PEcAn.logger::logger.error(\"\\n Prior has changed. \\n\", \n",
        "                      \"Difference is:\\n\", PEcAn.logger::print2string(diff_prior), \n                      wrap = FALSE)\n                    foundallfiles <- FALSE\n                  }\n                  PEcAn.logger::logger.debug(\"Checking if trait data have changed\")\n                  existing_trait_data <- PEcAn.utils::load_local(need_paths[[\"trait_data\"]])[[\"trait.data\"]]\n                  if (length(trait.data.check) != length(existing_trait_data)) {\n                    PEcAn.logger::logger.warn(\"Lengths of new and existing `trait.data` differ. \", \n",
        "                      \"Re-running meta-analysis.\")\n                    foundallfiles <- FALSE\n                  }\n                  else if (length(trait.data.check) == 0) {\n                    PEcAn.logger::logger.warn(\"New and existing trait data are both empty. Skipping this check.\")\n                  }\n                  else {\n                    current_traits <- dplyr::bind_rows(trait.data.check, \n                      .id = \"trait\") %>% dplyr::select(-mean, \n                      -stat)\n                    existing_traits <- dplyr::bind_rows(existing_trait_data, \n",
        "                      .id = \"trait\") %>% dplyr::select(-mean, \n                      -stat)\n                    diff_traits <- symmetric_setdiff(current_traits, \n                      existing_traits)\n                    if (nrow(diff_traits) > 0) {\n                      diff_summary <- diff_traits %>% dplyr::count(source, \n                        trait)\n                      PEcAn.logger::logger.error(\"\\n Prior has changed. \\n\", \n                        \"Here are the number of differing trait records by trait:\\n\", \n",
        "                        PEcAn.logger::print2string(diff_summary), \n                        wrap = FALSE)\n                      foundallfiles <- FALSE\n                    }\n                  }\n                }\n                if (foundallfiles) {\n                  PEcAn.logger::logger.info(\"Reusing existing files from posterior\", \n                    pft$posteriorid, \"for PFT\", shQuote(pft$name))\n                  for (id in seq_len(nrow(files))) {\n                    file.copy(from = file.path(files[[id, \"file_path\"]], \n",
        "                      files[[id, \"file_name\"]]), to = file.path(pft$outdir, \n                      files[[id, \"file_name\"]]))\n                  }\n                  done <- TRUE\n                  if (length(list.files(pft$outdir, \"post.distns.Rdata\")) == \n                    0) {\n                    all.files <- list.files(pft$outdir)\n                    post.distn.file <- all.files[grep(\"post\\\\.distns\\\\..*\\\\.Rdata\", \n                      all.files)]\n                    if (length(post.distn.file) > 1) \n                      PEcAn.logger::logger.severe(\"get.trait.data.pft() doesn't know how to \", \n",
        "                        \"handle multiple `post.distns.*.Rdata` files.\", \n                        \"Found the following files: \", paste(shQuote(post.distn.file), \n                          collapse = \", \"))\n                    else if (length(post.distn.file) == 1) {\n                      link_input <- file.path(pft[[\"outdir\"]], \n                        post.distn.file)\n                      link_target <- file.path(pft[[\"outdir\"]], \n                        \"post.distns.Rdata\")\n                      PEcAn.logger::logger.debug(\"Found exactly one posterior distribution file: \", \n",
        "                        shQuote(link_input), \". Symlinking it to PFT output directory: \", \n                        shQuote(link_target))\n                      file.symlink(from = link_input, to = link_target)\n                    }\n                    else {\n                      PEcAn.logger::logger.error(\"No previous posterior distribution file found. \", \n                        \"Most likely, trait data were retrieved, but meta-analysis \", \n                        \"was not run. Meta-analysis will be run.\")\n",
        "                      done <- FALSE\n                    }\n                  }\n                  if (done) \n                    return(pft)\n                }\n            }\n        }\n    }\n    trait.data <- query.traits(pft_members$id, traits, con = dbcon, \n        update.check.only = FALSE, ids_are_cultivars = (pfttype == \n            \"cultivar\"))\n    traits <- names(trait.data)\n    if (length(trait.data) > 0) {\n        trait_counts <- trait.data %>% dplyr::bind_rows(.id = \"trait\") %>% \n            dplyr::count(trait)\n",
        "        PEcAn.logger::logger.info(\"\\n Number of observations per trait for PFT \", \n            shQuote(pft[[\"name\"]]), \":\\n\", PEcAn.logger::print2string(trait_counts, \n                n = Inf), wrap = FALSE)\n    }\n    else {\n        PEcAn.logger::logger.warn(\"None of the requested traits were found for PFT \", \n            format(pft_members[[\"id\"]], scientific = FALSE))\n    }\n    old.files <- list.files(path = pft$outdir)\n    now <- format(x = Sys.time(), format = \"%Y-%m-%d %H:%M:%S\")\n    db.query(paste0(\"INSERT INTO posteriors (pft_id, created_at, updated_at) \", \n",
        "        \"VALUES (\", pftid, \", '\", now, \"', '\", now, \"')\"), con = dbcon)\n    pft$posteriorid <- dplyr::tbl(dbcon, \"posteriors\") %>% dplyr::filter(pft_id == \n        !!pftid, created_at == !!now) %>% dplyr::pull(id)\n    pathname <- file.path(dbfiles, \"posterior\", pft$posteriorid)\n    dir.create(pathname, showWarnings = FALSE, recursive = TRUE)\n    utils::write.csv(pft_members, file.path(pft$outdir, pft_member_filename), \n        row.names = FALSE)\n    save(prior.distns, file = file.path(pft$outdir, \"prior.distns.Rdata\"))\n",
        "    utils::write.csv(prior.distns, file.path(pft$outdir, \"prior.distns.csv\"), \n        row.names = TRUE)\n    PEcAn.logger::logger.info(\"\\n Summary of prior distributions for PFT \", \n        shQuote(pft$name), \":\\n\", PEcAn.logger::print2string(prior.distns), \n        wrap = FALSE)\n    trait.data.file <- file.path(pft$outdir, \"trait.data.Rdata\")\n    save(trait.data, file = trait.data.file)\n    utils::write.csv(dplyr::bind_rows(trait.data), file.path(pft$outdir, \n        \"trait.data.csv\"), row.names = FALSE)\n    store_files_all <- list.files(path = pft[[\"outdir\"]])\n",
        "    store_files <- setdiff(store_files_all, old.files)\n    PEcAn.logger::logger.debug(\"The following posterior files found in PFT outdir \", \n        \"(\", shQuote(pft[[\"outdir\"]]), \") will be registered in BETY \", \n        \"under posterior ID \", format(pft[[\"posteriorid\"]], scientific = FALSE), \n        \": \", paste(shQuote(store_files), collapse = \", \"), \". \", \n        \"The following files (if any) will not be registered because they already existed: \", \n        paste(shQuote(intersect(store_files, old.files)), collapse = \", \"), \n",
        "        wrap = FALSE)\n    for (file in store_files) {\n        filename <- file.path(pathname, file)\n        file.copy(file.path(pft$outdir, file), filename)\n        dbfile.insert(in.path = pathname, in.prefix = file, type = \"Posterior\", \n            id = pft[[\"posteriorid\"]], con = dbcon)\n    }\n    return(pft)\n}\n<bytecode: 0x1531ac00>\n<environment: namespace:PEcAn.DB>\n",
        "> ",
        "# ----------------------------------------------------------------------",
        "> ",
        "# Load required libraries",
        "> ",
        "# ----------------------------------------------------------------------",
        "> ",
        "#.libPaths()",
        "> ",
        "devtools::load_all(\"pecan/base/db/\")",
        "Loading PEcAn.DB\n",
        "unloadNamespace(\"PEcAn.DB\") not successful, probably because another loaded package depends on it. Forcing unload. If you encounter problems, please restart R.\n",
        "Error in importIntoEnv(pkgenv, exports, nsenv, exports) : \n  cannot change value of locked binding for 'query.pft_species'\n",
        "[2019-09-04 17:12:15] [error",
        "] handle_read_frame error: websocketpp.transport:7 (End of File)\n",
        "\n",
        "Warning messages:\n",
        "1: replacing previous import ‘dplyr::last’ by ‘xts::last’ when loading ‘PEcAn.data.atmosphere’ \n",
        "2: replacing previous import ‘dplyr::first’ by ‘xts::first’ when loading ‘PEcAn.data.atmosphere’ \n",
        "04 Sep 2019 17:12:15 [rsession-kristinariemer] ERROR r error 4 (R code execution error) [errormsg=Error in R_ut_parse(u) : \n  Error in function R_ut_parse: string unit representation contains unknown word\n]; OCCURRED AT: rstudio::core::Error rstudio::r::exec::executeSafely(rstudio_boost::function<void()>) /home/ubuntu/rstudio/src/cpp/r/RExec.cpp:212; LOGGED FROM: void rstudio::session::{anonymous}::processEvents() /home/ubuntu/rstudio/src/cpp/session/SessionHttpMethods.cpp:91\n"
    ],
    "type" : [
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        2,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3
    ]
}